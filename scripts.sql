/*  
Autor: Daniel Felipe López Rendón 
Fecha de creación: 2025-02-04  
Descripción:  
En este archivo se encuentran los scripts correspondientes para la creación de un esquema para prueba técnica,dentro del 
cual se encuentran  las tablas que hacen alución a una entidad financiera basica. 
*/

CREATE USER TEST IDENTIFIED BY TEST
DEFAULT TABLESPACE DEFAULT
TEMPORARY TABLESPACE temp;

GRANT CONNECT, RESOURCE TO TEST;

ALTER USER TEST QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO TEST;
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE, CREATE PROCEDURE, CREATE TRIGGER, CREATE SYNONYM TO TEST;


/*
Esta tabla se usará para el registro de clientes.
*/
CREATE TABLE TEST.CLIENT (
ID_CLIENT NUMBER NOT NULL,
EMAIL  VARCHAR(100) NOT NULL,
NAME  VARCHAR(100) NOT NULL,
IDENTIFICATION_NUMBER NUMBER NOT NULL,
ADDRESS VARCHAR(255) NOT NULL,
PHONE  NUMBER(15),
STATUS VARCHAR(1) DEFAULT 'A'  NOT NULL,
CONSTRAINT PK_CLIENT PRIMARY KEY (ID_CLIENT),
CONSTRAINT UK_IDEN_NUMBER_CLIENT UNIQUE  (IDENTIFICATION_NUMBER),
CONSTRAINT UK_EMAIL_CLIENT UNIQUE  (EMAIL)
);

/*
Esta tabla es un maestro el cual se usará para el registro de los tipos de cuentas bancarias.
*/
CREATE TABLE TEST.ACCOUNT_TYPE (
ID_ACCOUNT_TYPE  NUMBER NOT NULL,
DESCRIPTION VARCHAR(255) NOT NULL,
NAME VARCHAR(100) NOT NULL,
STATUS VARCHAR(1) DEFAULT 'A'  NOT NULL,
CONSTRAINT PK_ID_ACCOUNT_TYPE PRIMARY KEY (ID_ACCOUNT_TYPE),
CONSTRAINT UK_NAME_ACCOUNT_TYPE UNIQUE  (NAME)
);


/*
Esta tabla se usará para el registro de los tipos de cuentas bancarias para cada cliente.
*/
CREATE TABLE TEST.ACCOUNT (
ID_ACCOUNT NUMBER NOT NULL,
ID_CLIENT NUMBER  NOT NULL,
ACCOUNT_NUMBER  NUMBER NOT NULL,
ID_ACCOUNT_TYPE  NUMBER NOT NULL,
STATUS VARCHAR(1) DEFAULT 'A'  NOT NULL,
BALANCE NUMBER  NOT NULL,
CONSTRAINT PK_ID_ACCOUNT PRIMARY KEY (ID_ACCOUNT),
CONSTRAINT FK_ID_CLIENT FOREIGN KEY  (ID_CLIENT) REFERENCES  TEST.CLIENT(ID_CLIENT),
CONSTRAINT FK_ID_ACCOUNT_TYPE FOREIGN KEY  (ID_ACCOUNT_TYPE) REFERENCES  TEST.ACCOUNT_TYPE(ID_ACCOUNT_TYPE),
CONSTRAINT UK_ACCOUNT_NUMBER UNIQUE  (ACCOUNT_NUMBER,ID_ACCOUNT_TYPE)
);
/*
Esta tabla es un maestro el cual se usará para el registro de los tipos de transacciones.
*/

CREATE TABLE TEST.TRANSACTION_TYPE (
ID_TRANSACTION_TYPE  NUMBER NOT NULL,
DESCRIPTION VARCHAR(255) NOT NULL,
NAME VARCHAR(100) NOT NULL,
STATUS VARCHAR(1) DEFAULT 'A'  NOT NULL,
CONSTRAINT PK_ID_TRANSACTION_TYPE PRIMARY KEY (ID_TRANSACTION_TYPE),
CONSTRAINT UK_NAME_TRANSACTION_TYPE UNIQUE  (NAME)
);


/*
Esta tabla se usará para el registro de las transacciones por cliente.
*/
CREATE TABLE TEST.ACCOUNT_MOVEMENT (
ID_ACCOUNT_MOVEMENT NUMBER NOT NULL,
ID_ACCOUNT NUMBER  NOT NULL,
ID_TRANSACTION_TYPE  NUMBER NOT NULL,
AMOUNT  NUMBER NOT NULL,
TRANSACTION_DATE DATE NOT NULL,
CONSTRAINT PK_ID_ACCOUNT_MOVEMENT PRIMARY KEY (ID_ACCOUNT_MOVEMENT),
CONSTRAINT FK_ID_ACCOUNT FOREIGN KEY  (ID_ACCOUNT) REFERENCES  TEST.ACCOUNT(ID_ACCOUNT),
CONSTRAINT FK_ID_TRANSACTION_TYPE FOREIGN KEY  (ID_TRANSACTION_TYPE) REFERENCES  TEST.TRANSACTION_TYPE(ID_TRANSACTION_TYPE)
);


/*
Para esta prueba use oracle 11 como esta version no tiene un tema de autoincremental se crean las secuencias para las tablas.
*/


CREATE SEQUENCE TEST.SEQ_CLIENT
START WITH 1         
INCREMENT BY 1       
NOCACHE              
NOCYCLE;

CREATE SEQUENCE TEST.SEQ_ACCOUNT_TYPE
START WITH 1         
INCREMENT BY 1       
NOCACHE              
NOCYCLE;

CREATE SEQUENCE TEST.SEQ_ACCOUNT
START WITH 1         
INCREMENT BY 1       
NOCACHE              
NOCYCLE;

CREATE SEQUENCE TEST.SEQ_TRANSACTION_TYPE
START WITH 1         
INCREMENT BY 1       
NOCACHE              
NOCYCLE;


CREATE SEQUENCE TEST.SEQ_ACCOUNT_MOVEMENT
START WITH 1         
INCREMENT BY 1       
NOCACHE              
NOCYCLE;
